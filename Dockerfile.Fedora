ARG OS_RELEASE=33
ARG OS_IMAGE=fedora:$OS_RELEASE

FROM $OS_IMAGE as build

ARG OS_RELEASE
ARG OS_IMAGE
ARG HTTP_PROXY=""
ARG USER="zwave2mqtt"

LABEL MAINTAINER riek@llunved.net

ENV LANG=en_US.UTF-8
USER root

RUN mkdir -p /zwave2mqtt
WORKDIR /zwave2mqtt

ADD ./rpmreqs-rt.txt ./rpmreqs-build.txt ./rpmreqs-dev.txt /zwave2mqtt/

ENV http_proxy=$HTTP_PROXY
RUN dnf -y install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$OS_RELEASE.noarch.rpm \
    https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$OS_RELEASE.noarch.rpm
    && dnf -y upgrade \
    && dnf -y install $(cat rpmreqs-rt.txt) $(cat rpmreqs-build.txt) \
    && if [ ! -z "$DEVBUILD" ] ; then dnf -y install $(cat rpmreqs-dev.txt); fi 

# Create the minimal target environment
RUN mkdir /sysimg \
    && dnf install --installroot /sysimg --releasever $OS_RELEASE --setopt install_weak_deps=false --nodocs -y coreutils-single glibc-minimal-langpack $(cat rpmreqs-rt.txt) \
    && rm -rf /sysimg/var/cache/* \
    && ls -alh /sysimg/var/cache

RUN adduser -R /sysimg -u 1010 -r -g root -G dialout -d /zwave2mqtt -s /sbin/nologin -c "zwave2mqtt user" $USER

#FIXME this needs to be more elegant
RUN ln -s /sysimg/usr/share/zoneinfo/America/New_York /sysimg/etc/localtime

#move the oepnzwave config so that we can mount it persistently from the host
RUN mv -fv  /sysimg/etc/openzwave /sysimg/etc/openzwave.default && mkdir -pv /sysimg/etc/openzwave

ADD . /zwave2mqtt/

RUN npm install  
# Add some dev / debug content
RUN if [ ! -z "$DEVBUILD" ] ; then npm install -g nodemon; fi 
RUN npm run build

RUN cp -pR /zwave2mqtt/ /sysimg/zwave2mqtt


FROM scratch AS runtime

COPY --from=build /sysimg /

WORKDIR /zwave2mqtt

ENV USER=$USER
ENV CHOWN=true 
ENV CHOWN_DIRS="/zwave2mqtt/store /var/log/zwave2mqtt /etc/openzwave" 
  
#FIXME - Do we need this?
RUN if [ ! -z "$DEVBUILD" ] ; then chown -R ${USER}:root /zwave2mqtt ; fi

ADD ./entrypoint.sh \ 
    ./install.sh \ 
    ./upgrade.sh \
    ./uninstall.sh /sbin/ 
ADD ./start.sh /bin/ 
RUN chmod +x /sbin/entrypoint.sh \ 
    && chmod +x /sbin/install.sh \
    && chmod +x /sbin/upgrade.sh \
    && chmod +x /sbin/uninstall.sh \ 
    &&  chmod +x /bin/start.sh

EXPOSE 8091
ENTRYPOINT ["/sbin/entrypoint.sh"]
CMD ["/bin/start.sh"]

LABEL RUN="podman run --rm -t -i --name \$NAME -p 8091:8091 --net=host --device /dev/ttyACM0 --entrypoint /sbin/entrypoint.sh -v /var/lib/zwave2mqtt/zwave2mqtt:/zwave2mqtt/store -v /var/lib/zwave2mqtt/openzwave:/etc/openzwave -v /var/log/zwave2mqtt:/var/log/zwave2mqtt \$IMAGE /bin/start.sh"
LABEL INSTALL="podman run --rm -t -i --privileged --rm --net=host --ipc=host --pid=host -v /:/host -v /run:/run -e HOST=/host -e IMAGE=\$IMAGE -e NAME=\$NAME -e LOGDIR=/var/log -e DATADIR=/var/lib --entrypoint /bin/sh  \$IMAGE /sbin/install.sh"
LABEL UPGRADE="podman run --rm -t -i --privileged --rm --net=host --ipc=host --pid=host -v /:/host -v /run:/run -e HOST=/host -e IMAGE=\$IMAGE -e NAME=\$NAME -e LOGDIR=/var/log -e DATADIR=/var/lib --entrypoint /bin/sh  \$IMAGE /sbin/upgrade.sh"
LABEL UNINSTALL="podman run --rm -t -i --privileged --rm --net=host --ipc=host --pid=host -v /:/host -v /run:/run -e HOST=/host -e IMAGE=\$IMAGE -e NAME=\$NAME -e LOGDIR=/var/log -e DATADIR=/var/lib --entrypoint /bin/sh  \$IMAGE /sbin/uninstall.sh"

